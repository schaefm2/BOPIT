#include <Adafruit_NeoPixel.h>

#define NUM_LEDS 8
#define PIN 0
// #define FLEXPIN 6

Adafruit_NeoPixel pixels(NUM_LEDS, PIN, NEO_GRB + NEO_KHZ800);


int flexValue;
int flexPin = 11; // 11 is actually #12

int tiltValue;
int prevTiltValue = 0;
int tiltPin = 9;
int tiltRate = 0;

int buttonValue;
int buttonPin = 6;


int time = 5000; 
int endTime;
int action;
bool actionChose = false;
int lights;

void setup() {
  pixels.begin(); // Initialize the NeoPixel library

  tone(10, 200, 200);
  
  pinMode(tiltPin, INPUT);
  digitalWrite(tiltPin, HIGH);

  pinMode(buttonPin, INPUT);
  digitalWrite(buttonPin, HIGH);

  pixels.clear();
  showShake();

  endTime = millis() + 5000;

  Serial.begin(9600);
}

void loop() {
  showLeds();
  pixels.clear();

  // flexValue = analogRead(flexPin);
  // Serial.print("Flex value: ");
  // Serial.println(flexValue);

  // tiltValue = digitalRead(tiltPin);
  // Serial.println(digitalRead(tiltPin));
  // Serial.println(digitalRead(buttonPin));

  // choose our action
  if (!actionChose){
    action = random(2);
    action = 0;
    Serial.print("Action: ");
    Serial.println(action);
    actionChose = true;
  }
  // do game logic
  else{
    // bend action
    if (action == 0){
      Serial.println("DO BEND");
      bend();
    } 
    else if (action == 1){
      // play shake it sound
      shake();
      // get shake it value
      Serial.println("DO SHAKE");
    }

    else{
      Serial.println("DO NOTHING");
    }
  }

  if (millis() >= endTime){
    Serial.println("CHANGING ACTION");
    time = time - 400;
    endTime = millis() + time;
    actionChose = false;
  }

  delay(500);
}

void showLeds(){
  lights = map(endTime - millis(), 0, time, 0, 8);

  Serial.print("LIGHTS: ");
  Serial.println(lights);

  for(int i = 0; i < lights; i++){
    pixels.setPixelColor(i, pixels.Color(0, 120, 0));
  }

  pixels.show();
}

void bend(){
  flexValue = analogRead(flexPin);
  if (flexPin > 700){
    // flexed enough
    // trigger next choice
    actionChose = false;

    // do a light show
    // fill then blink purple
    showBend();
  }
}

void shake(){
  // calculate rate and get vals
  tiltValue = digitalRead(tiltPin);
  if (tiltValue != prevTiltValue){
    tiltRate += 1;
  }
  prevTiltValue = tiltValue;

  // triggered
  if (tiltRate > 5){
    tiltRate = 0;

    showShake();
  }
}

void showBend(){
  // fill green
  for(int i = 8; i >= 0; i--){
    pixels.setPixelColor(i, pixels.Color(0, 120, 0));
    pixels.show();
    delay(150);
  }

  // blink purple 3 times
  for(int j = 0; j < 3; j++){
    for(int i = 0; i < 8; i++){
      pixels.setPixelColor(i, pixels.Color(128, 0, 128));
    }
    pixels.show();
    delay(200);
    pixels.fill(0,0,0);
    pixels.show();
    delay(200);
  }
}

void showShake(){
  // go one way
  for(int i=0;i<8;i++){
    pixels.setPixelColor(i, pixels.Color(250, 0, 0));
    for(int j=0;j<8;j++){
      if(i!=j){
	      pixels.setPixelColor(j, pixels.Color(0, 250, 0));
      }	
		}
		pixels.show();
		delay(200);
	} 

  // go the other
	for(int i=8;i>0;i--){
    pixels.setPixelColor(i, pixels.Color(250, 0, 0));
    for(int j=0;j<8;j++){
      if(i!=j){
	      pixels.setPixelColor(j, pixels.Color(0, 250, 0));
      }	
    }
    pixels.show();
    delay(200);
  } 
}


